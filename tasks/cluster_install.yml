---

- name: Install HA pattern (SLES only)
  zypper: type=pattern name={{ item }} state=present
  with_items:
    - ha_sles
  when: ansible_distribution == 'SLES'

- name: Install corosync / pacemaker packages
  package:
    name: "{{ cluster_distro_packages }}"
    state: "{{ cluster_package_state }}"
    update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2
  tags:
    - install-apt
    - install-yum
    - install-zypper

- name: Install sbd package
  package:
    name: sbd
    state: "{{ cluster_package_state }}"
    update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  when:
    - cluster_stonith_use_sbd == true
    - ansible_virtualization_type != 'lxc'
    - ansible_distribution != 'SLES' # included in the ha_sles pattern

- name: Install python-parallax using pip (Debian / Ubuntu / FreeBSD)
  pip: name=parallax extra_args={{ pip_extra_args }}
  when:
      - ansible_os_family | lower == 'debian' or ansible_os_family | lower == 'freebsd'
      - ansible_os_family | lower != 'ubuntu' and ansible_distribution_major_version | lower | int < 18

- name: Openstack fencing
  when:
    - cluster_stonith_use_openstack == true
    - ansible_virtualization_type == "openstack"
  block:
    - name: Install openstack_cluster_node repo packages
      package:
        name: "{{ cluster_openstack_distro_repo_packages }}"
        state: "{{ cluster_package_state }}"
        update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
        cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
      register: install_packages
      until: install_packages is success
      retries: 5
      delay: 2
      tags:
        - install-apt
        - install-yum
        - install-zypper

    - name: Remove CentOS-QEMU-EV repo
      when: ansible_os_family | lower == 'redhat'
      file:
        path: /etc/yum.repos.d/CentOS-QEMU-EV.repo
        state: absent

    - name: Install openstack_cluster_node packages
      package:
        name: "{{ cluster_openstack_distro_repo_packages }}"
        state: "{{ cluster_package_state }}"
        update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
        cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
      register: install_packages
      until: install_packages is success
      retries: 5
      delay: 2
      tags:
        - install-apt
        - install-yum
        - install-zypper

    - name: Install openstack fencing packages
      package:
        name: "{{ cluster_distro_openstack_fencing_packages }}"
        state: "{{ cluster_package_state }}"
        update_cache: "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}"
        cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
      register: install_packages
      until: install_packages is success
      retries: 5
      delay: 2
      tags:
        - install-apt
        - install-yum
        - install-zypper

    - name: Copy openstack fencing agent to the nodes
      copy: src="{{ item.src }}" dest="{{ item.dest }}" mode={{ item.mode }}
      with_items:
        - src: "{{ cluster_stonith_openstack_fencing_repo_path }}/agents/openstack/fence_openstack"
          dest: "/usr/sbin/"
          mode: 755
        - src: "{{ cluster_stonith_openstack_fencing_repo_path }}/agents/openstack/fence_openstack.8"
          dest: "/usr/share/man/man8/"
          mode: 644
        - src: "{{ cluster_stonith_openstack_fencing_repo_path }}/lib/fencing.py"
          dest: "/usr/share/fence/"
          mode: 644


