---


# CRM scripts
- include: cluster_post_install_crm_scripts.yml
  tags:
    - cluster-crm-scripts

# Configure SBD service
- include: cluster_post_install_stonith_sbd.yml
  when: cluster_stonith_use_sbd == true
  tags:
    - cluster-stonith

# Corosync configuration
- name: Corosync configuration
  template: src=corosync.conf.j2 dest={{ cluster_corosync_configuration }}
  register: corosync_template_result
  vars:
    generated_cluster_ring0_port: 'ansible_{{ cluster_ring0_port | regex_replace("-","_") }}'
    generated_cluster_ring1_port: 'ansible_{{ cluster_ring1_port | regex_replace("-","_") }}'
  tags:
    - cluster-corosync

- name: Restart corosync
  shell: "{{ item }}"
  with_items:
    - crm cluster stop
    - crm cluster start
  when:
    - corosync_template_result|changed
  tags:
    - cluster-corosync

- name: Waits for the cluster to be online
  shell: crm_mon -s
  register: crm_mon
  until: crm_mon.stdout.find("CLUSTER OK") > -1
  retries: 10
  delay: 10
  run_once: true

# Configure IPMI resource
- include: cluster_post_install_stonith_ipmi.yml
  when: cluster_stonith_use_ipmi == true
  tags:
    - cluster-stonith

# The STONITH suicide is used when SBD is unused
- name: Create suicide resource
  shell: crm -w script run suicide
  run_once: true
  when:
    - cluster_stonith_use_sbd == false
    - ansible_virtualization_type != 'lxc'
    - ansible_os_family | lower != 'freebsd'
  tags:
    - cluster-stonith

# Nodes attributes
- include: cluster_post_install_attributes.yml
  tags:
    - cluster-attributes

# Default values
- name: Set no-quorum-policy
  shell: crm configure property {{ item.attribute }}={{ item.value }}
  with_items:
    - attribute: no-quorum-policy
      value: "{{ cluster_no_quorum_policy }}"
  run_once: true

- name: Set default options
  shell: crm configure op_defaults {{ item.attribute }}={{ item.value }}
  with_items:
    - attribute: timeout
      value: 60
  run_once: true

- name: Disable stonith on FreeBSD
  shell: crm configure op_defaults stonith-enabled=false
  when:
    - ansible_os_family | lower == 'freebsd'
  run_once: true

# Creates a cloned resource to ping three peers.
# This is an anti-splitbran system for share-nothing on two-nodes clusters
- name: Gets the corosync ring0 IP address
  shell: awk 'BEGIN { ORS=" " } /ring0_addr/ { print $2 }' {{ cluster_corosync_configuration }}
  register: crm_nodes_ips
  when:
    - cluster_expected_votes < 3
    - cluster_ping_remote_addr != None

- name: Sets a ping resource on two-nodes clusters
  shell: crm -w script run ping host_list="{{ crm_nodes_ips.stdout }}{{ cluster_ping_remote_addr }}"
  run_once: true
  when:
    - cluster_expected_votes < 3
    - cluster_ping_remote_addr != None

- include: cluster_post_install_hawk.yml
  when:
    - cluster_use_hawk == true
    - ansible_os_family | lower == 'suse'
  tags:
    - cluster-mgmt-hawk

# Creates management IP, Hawk resources
- name: Sets the management IP
  shell: >
    crm script run mgmt \
      ip={{ cluster_mgmt_ip }} \
      use_hawk={{ cluster_use_hawk | lower }} \
      attribute_name={{ cluster_node_mgmt_ip_attribute_key }} \
      attribute_value={{ cluster_node_mgmt_ip_attribute_value }}
  run_once: true
  when: cluster_mgmt_ip != None
  tags:
    - cluster-mgmt-ip-addr
