---

# Configure SBD service
- include: cluster/stonith_sbd.yml
  when: cluster_stonith_use_sbd == true
  tags:
    - stonith

# Corosync configuration
- name: Corosync configuration
  template: src=corosync.conf.j2 dest=/etc/corosync/corosync.conf
  register: corosync_template_result
  vars:
    generated_cluster_port: 'ansible_{{ net_cluster_port }}'

- name: Restart corosync
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - corosync
    - pacemaker
  when: corosync_template_result|changed

- name: Waits for the cluster to be online
  shell: crm_mon -s
  register: crm_mon
  until: crm_mon.stdout.find("CLUSTER OK") > -1
  retries: 10
  delay: 10
  run_once: true

# Configure IPMI resource
- include: cluster/stonith_ipmi.yml
  when: cluster_stonith_use_ipmi == true
  tags:
    - stonith

# Create SBD resource
- name: Create SBD resource
  shell: crm -w script run sbd id=stonith_sbd
  run_once: true
  when: cluster_stonith_use_sbd == true
  tags:
    - stonith

# The STONITH suicide is used when SBD is unused
- name: Create suicide resource
  shell: crm -w script run stonith_suicide
  run_once: true
  when: cluster_stonith_use_sbd == false
  tags:
    - stonith

# Nodes attributes
- include: cluster/attributes.yml

# Default values
- name: Set no-quorum-policy
  shell: crm configure property {{ item.attribute }}={{ item.value }}
  with_items:
    - attribute: no-quorum-policy
      value: "{{ cluster_no_quorum_policy }}"
  run_once: true

- name: Set default options
  shell: crm configure op_defaults {{ item.attribute }}={{ item.value }}
  with_items:
    - attribute: timeout
      value: 60
  run_once: true

- name: Set default options
  shell: crm configure op_defaults stonith-enabled=false
  when:
    - cluster_expected_nodes < 3
    - ansible_virtualization_role != 'host'
  run_once: true

# Creates management IP, Hawk resources
- name: Sets the management IP and Hawk resources
  shell: crm -w script run mgmt ipaddr={{ cluster_mgmt_ip }} size={{ play_hosts | length - 1 }}
  run_once: true
  when: cluster_mgmt_ip != 'None'

# Creates resources to manage LVM volumes in an active/standby way
# Only on a physical host
- include: cluster/clvm.yml
  when: ansible_virtualization_role == 'host'

# Creates a cloned resource to ping three peers.
# This is an anti-splitbran system for share-nothing on two-nodes clusters
- name: Gets the corosync ring0 IP address
  shell: awk 'BEGIN { ORS=" " } /ring0_addr/ { print $2 }' /etc/corosync/corosync.conf
  register: crm_nodes_ips

- name: Sets a ping resource on two-nodes clusters
  shell: crm -w script run ping host_list="{{ crm_nodes_ips.stdout }}{{ cluster_ping_remote_addr }}"
  run_once: true
  when:
    - cluster_expected_nodes < 3
