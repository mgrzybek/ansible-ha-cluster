# {{ ansible_managed }}

totem {
	version:	2
	secauth:	off
	cluster_name:   {{ cluster_name }}
	clear_node_high_bit:	yes

	crypto_cipher:	none
	crypto_hash:	none

	interface {
		ringnumber:	 0
{% if generated_cluster_ring0_port | lower != 'ansible_none' %}
{% if hostvars[ansible_fqdn] is defined %}
		bindnetaddr:	{{ hostvars[ansible_fqdn][generated_cluster_ring0_port]['ipv4']['network'] }}
{% elif hostvars[ansible_hostname] is defined  %}
		bindnetaddr:	{{ hostvars[ansible_hostname][generated_cluster_ring0_port]['ipv4']['network'] }}
{% else %}
		bindnetaddr:	{{ self_facts['ansible_facts'][generated_cluster_ring0_port]['ipv4']['network'] }}
{% endif %}
{% else %}
{% if hostvars[ansible_fqdn] is defined %}
		bindnetaddr:	{{ hostvars[ansible_fqdn]['ansible_default_ipv4']['network'] }}
{% elif hostvars[ansible_hostname] is defined  %}
		bindnetaddr:	{{ hostvars[ansible_hostname]['ansible_default_ipv4']['network'] }}
{% else %}
		bindnetaddr:	{{ self_facts['ansible_facts']['ansible_default_ipv4']['network'] }}
{% endif %}
{% endif %}
		ttl:			1
{% if cluster_transport | lower != 'udpu' and cluster_mcast_address != None %}
		mcastaddr:	{{ cluster_mcast_address }}
{% endif %}
	}

{% if generated_cluster_ring1_port | lower != 'ansible_none' %}
	interface {
		ringnumber:	1
{% if hostvars[ansible_fqdn] is defined %}
		bindnetaddr:	{{ hostvars[ansible_fqdn][generated_cluster_ring1_port]['ipv4']['network'] }}
{% elif hostvars[ansible_hostname] is defined  %}
		bindnetaddr:	{{ hostvars[ansible_hostname][generated_cluster_ring1_port]['ipv4']['network'] }}
{% else %}
		bindnetaddr:	{{ self_facts['ansible_facts'][generated_cluster_ring1_port]['ipv4']['network'] }}
{% endif %}
		ttl:			1
{% if cluster_transport | lower != 'udpu' and cluster_mcast_address != None %}
		mcastaddr:	{{ cluster_mcast_address }}
{% endif %}
	}

	rrp_mode:	{{ cluster_rrp_mode }}
{% endif %}

	transport: {{ cluster_transport | lower }}
}

logging {
	fileline:	off
	to_stderr:	no
	to_logfile:	no
	to_syslog:	yes
	debug:		off
	timestamp:	on
	logger_subsys {
		subsys:	QUORUM
		debug:	off
	}
}

{% if cluster_transport | lower == 'udpu' %}
nodelist {
{% for node in play_hosts %}
	node {
{% if hostvars[ansible_fqdn] is defined %}
		# {{ hostvars[node]['ansible_fqdn'] }}
{% else %}
		# {{ hostvars[node]['ansible_hostname'] }}
{% endif %}
{% if generated_cluster_ring0_port | lower != 'ansible_none' %}
		ring0_addr: {{ hostvars[node][generated_cluster_ring0_port]['ipv4']['address'] }}
{% if generated_cluster_ring1_port | lower != 'ansible_none' %}
		ring1_addr: {{ hostvars[node][generated_cluster_ring1_port]['ipv4']['address'] }}
{% endif %}
		nodeid: {{ hostvars[node][generated_cluster_ring0_port]['ipv4']['address'] | regex_replace("\D", "") | regex_replace("^\w+(\d){8}$","\\1") }}
{% else %}
		ring0_addr: {{ hostvars[node]['ansible_default_ipv4']['address'] }}
		nodeid: {{ hostvars[node]['ansible_default_ipv4']['address'] | regex_replace("\D", "") | regex_replace("^\w+(\d){8}$","\\1") }}
{% endif %}
	}
{% endfor %}
{% if play_hosts | length == 0 %}
{% for node in ansible_local.cluster_nodes %}
	node {
		# {{ node['name'] }}
		ring0_addr: {{ node['ring0_address'] }}
{% if node['ring1_address'] is defined %}
		ring1_addr: {{ node['ring1_address'] }}
{% endif %}
	}
{% endfor %}
{% endif %}
}
{% endif %}

quorum {
	# Enable and configure quorum subsystem (default: off)
	# see also corosync.conf.5 and votequorum.5
	provider: corosync_votequorum
	wait_for_all: 1
	expected_votes: {{ cluster_expected_votes }}
{% if cluster_expected_votes == 2 %}
	two_node: 1
{% else %}
	two_node: 0
{% endif %}
}
